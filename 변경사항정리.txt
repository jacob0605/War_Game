

프로젝트 진행 중 임의로 변경한 내용들을 정리.

1. Game_World 클래스의 add_object 함수

    원래는 bool add_object(Person *ptr); 이였음.
    이걸 void add_object(); 이렇게 변경

    변경 이유
        같은 클래스에 이미 bool has_space(); 라는 함수가 존재.
        이 함수로 새로운 객체를 생성할 수 있는 지 여부를 판별할 수 있음.
        그렇다면 새로운 객체를 추가하는 역할의 함수가 bool 타입일 이유가 있는가.
        void 타입으로 선언하고 함수 내부 if문 조건으로 has_space() 함수의 리턴 값을 사용하게 하면
        되는 것이 아닌가.
        이러한 이유로 함수의 타입을 bool에서 void로 변경하였음.

        인자의 Person * ptr 제거.
        add_object 함수에서 has_space 함수를 통해 새 객체를 생성할 수 있는 지를 판별함.
        생성할 수 있는 경우 현재 존재하는 객체의 수를 의미하는 num_objects를 인덱스로 사용,
        클래스의 멤버 변수인 Person * objptr[10];에서 해당하는 인덱스의 포인터에 새 객체의 메모리 동적 할당.
        이렇게 함으로 메모리 반납 시 배열을 통해 바로 반납이 가능해짐.
        예를 들면
            현재 3개의 객체가 존재, num_objects = 3;
            새로운 객체를 생성 시도
            add_object 함수 호출
                has_space 함수의 리턴 값을 통해 새 객체 생성 혹은 생성 불가 메시지 출력
                    생성 가능한 경우
                        objptr[num_objects] = new Person( /.../ );
                    생성 불가능한 경우
                        생성 불가능함을 알리는 메시지 출력
            clear() 함수를 통한 메모리 반납 및 

